// Section types and styles
//	default			0
//	word1			1
//	word2			2
//	word3			3
//	word4			4
//	word5			5
//	word6			6
//	comment			7
//	comment_doc		8
//	comment_line	9
//	comment_doc		10
//	character		11
//	character_eol	12
//	string			13
//	string_eol		14
//	delimiter		15
//	punctuation		16
//	operator		17
//	brace			18
//	command			19
//	identifier		20
//	label			21
//	number			22
//	parameter		23
//	regex			24
//	uuid			25
//	value			26
//	preprocessor	27
//	script			28
//	error			29
//	undefined		30

language GLSL
{
	lexer 		C/C++
	pattern 	*.glsl *.frag *.vert *.glfs *.glvs *.eval *.ctrl *.geom
	fold_flags 	comment compact preprocessor
	section operators
	{
		style	comment_doc
		type	comment_doc
		list
		{
			+
			-
			*
			/
			[
			]
			=
			(
			)
			.
			?
			!
			~
			&
			+=
			-=
			*=
			/=
			--
			++
		}
	}
	section keywords
	{
		style	identifier
		type	identifier
		list
		{
			attribute 
			bool 
			break 
			bvec2 
			bvec3 
			bvec4 
			const 
			continue 
			discard 
			do 
			else 
			false 
			float 
			for 
			if 
			in 
			inout 
			int 
			ivec2 
			ivec3 
			ivec4 
			main 
			mat2 
			mat3 
			mat4 
			out 
			return 
			true 
			uniform 
			varying 
			vec2 
			vec3 
			vec4 
			void 
			while 
			sampler1D 
			sampler2D 
			sampler3D 
			samplerCube 
			sampler1DShadow 
			sampler2DShadow 
			struct 
			asm 
			cast 
			class 
			default 
			double 
			dvec2 
			dvec3 
			dvec4 
			enum 
			extern 
			external 
			fixed 
			fvec2 
			fvec3 
			fvec4
			goto 
			half 
			hvec2 
			hvec3 
			hvec4 
			inline 
			input 
			interface 
			long 
			namespace 
			noinline 
			output 
			packed 
			public 
			sampler2DRect 
			sampler3DRect 
			sampler3DRectShadow 
			short 
			sizeof 
			static 
			switch 
			template 
			this 
			typedef 
			union 
			unsigned 
			using 
			volatile
			layout
		}
	}
	section functions
	{
		style	command
		type	command
		list
		{
			abs 
			acos 
			all 
			any 
			asin 
			atan 
			ceil 
			clamp 
			cos 
			cross 
			dFdx 
			dFdy 
			degrees 
			distance 
			dot 
			equal 
			exp 
			exp2 
			faceforward 
			floor 
			fract 
			ftransform 
			fwidth 
			greaterThan 
			greaterThanEqual 
			inversesqrt 
			length 
			lessThan 
			lessThanEqual 
			log 
			log2 
			matrixCompMult 
			max 
			min 
			mix 
			mod 
			noise1 
			noise2 
			noise3 
			noise4 
			normalize 
			not 
			notEqual 
			pow 
			radians 
			reflect 
			refract 
			shadow1D 
			shadow1DLod 
			shadow1DProj 
			shadow1DProjLod 
			shadow2D 
			shadow2DLod 
			shadow2DProj 
			shadow2DProjLod 
			sign 
			sin 
			smoothstep 
			sqrt 
			step 
			tan 
			texture1D 
			texture1DLod 
			texture1DProj 
			texture1DProjLod 
			texture2D 
			texture2DLod 
			texture2DProj 
			texture2DProjLod 
			texture3D 
			texture3DLod 
			texture3DProj 
			texture3DProjLod 
			textureCube 
			textureCubeLod
			EndPrimitive
			amplify
			EmitVertex
		}
	}
	section preprocessor
	{
		style	preprocessor
		type	preprocessor
		list
		{
			# 
			#define 
			#defined 
			#elif 
			#else 
			#endif 
			#error 
			#extension 
			#if 
			#ifdef 
			#ifndef 
			#line 
			#pragma 
			#undef 
			#version 
			__FILE__ 
			__LINE__ 
			__VERSION__ 
			disable 
			enable 
			require 
			warn
		}
	}
	section predefined_constants
	{
		style 	word1
		type	word1
		list
		{
			gl_BackLightModelProduct 
			gl_BackLightProduct 
			gl_BackMaterial  
			gl_ClipPlane 
			gl_DepthRange 
			gl_DepthRangeParameters 
			gl_EyePlaneQ 
			gl_EyePlaneR 
			gl_EyePlaneS 
			gl_EyePlaneT 
			gl_Fog 
			gl_FogParameters 
			gl_FrontLightModelProduct 
			gl_FrontLightProduct 
			gl_FrontMaterial 
			gl_LightModel 
			gl_LightModelParameters 
			gl_LightModelProducts 
			gl_LightProducts 
			gl_LightSource 
			gl_LightSourceParameters 
			gl_MaterialParameters 
			gl_MaxClipPlanes 
			gl_MaxCombinedTextureImageUnits 
			gl_MaxDrawBuffers 
			gl_MaxFragmentUniformComponents 
			gl_MaxLights 
			gl_MaxTextureCoords 
			gl_MaxTextureImageUnits 
			gl_MaxTextureUnits 
			gl_MaxVaryingFloats 
			gl_MaxVertexAttribs 
			gl_MaxVertexTextureImageUnits 
			gl_MaxVertexUniformComponents 
			gl_ModelViewMatrix 
			gl_ModelViewMatrixInverse 
			gl_ModelViewMatrixInverseTranspose 
			gl_ModelViewMatrixTranspose 
			gl_ModelViewProjectionMatrix 
			gl_ModelViewProjectionMatrixInverse 
			gl_ModelViewProjectionMatrixInverseTranspose 
			gl_ModelViewProjectionMatrixTranspose 
			gl_NormalMatrix 
			gl_NormalScale 
			gl_ObjectPlaneQ 
			gl_ObjectPlaneR 
			gl_ObjectPlaneS 
			gl_ObjectPlaneT 
			gl_Point 
			gl_PointParameters 
			gl_ProjectionMatrix 
			gl_ProjectionMatrixInverse 
			gl_ProjectionMatrixInverseTranspose 
			gl_ProjectionMatrixTranspose 
			gl_TextureEnvColor 
			gl_TextureMatrix 
			gl_TextureMatrixInverse 
			gl_TextureMatrixInverseTranspose 
			gl_TextureMatrixTranspose 
			gl_BackColor 
			gl_BackSecondaryColor 
			gl_ClipVertex 
			gl_Color 
			gl_Color 
			gl_FogCoord 
			gl_FogFragCoord 
			gl_FragColor 
			gl_FragCoord 
			gl_FragData 
			gl_FragDepth 
			gl_FrontColor 
			gl_FrontFacing 
			gl_FrontSecondaryColor 
			gl_MultiTexCoord0 
			gl_MultiTexCoord1 
			gl_MultiTexCoord2 
			gl_MultiTexCoord3 
			gl_MultiTexCoord4 
			gl_MultiTexCoord5 
			gl_MultiTexCoord6 
			gl_MultiTexCoord7
			gl_Normal
			gl_PointSize
			gl_Position
			gl_SecondaryColor
			gl_SecondaryColor
			gl_TexCoord
			gl_Vertex
			gl_TessLevelInner
			gl_TessLevelOuter
			gl_in
			gl_TessCoord
		}
	}
}